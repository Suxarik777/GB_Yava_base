package GB_Java_API_base.GB_Yava_base.Lections.L_01.java_type_oper_base;

// область видимости это { } скобочки в рамках которой мы определили эту переменную
public class view_variab_oblasti_vidimosti_perem {

    // прежде чем смотреть эту возможность почитай ниже
    static int t = 123; //переменная будет доступна везде, но только через имя класса
        // иногда их называют глобальными переменными

    public static void main(String[] args) {
        // мы знаем что пишем код в классе и в методе

        // но внутри можем создавать внутренние блоки кода (сложные классы - в некоторых книгах)

        //////////////
        int a = 123; // публикуем переменную

        {
            // int a = 222;
        }
        // и получаем сорян ничего не работает вы повторно объявляете переменую


        //////////////
        {
            int a1 = 222;
            System.out.println(a1);
        }
        int a1 = 123;
        System.out.println(a1);
        // заработало и вывело оба значение

        // потому что как только мы поработали внутри блока, всё a1 пропала
        // и мы просто заного её инициализировали


        ///
        int b = 333;
        {
            int a3 = 222;
            System.out.println(b + a3); // можно обратится к переменной выпущеной ранее до блока кода

        }

        /// следующую фишку смотри переменая на уровне класса вверху


        // пример ошибки
        {
            int i = 123;
            System.out.printf("i");
        }
        //System.out.println(i); // error: cannot find symbol // вспоминаем потому что она осталась внутри
    }
}

// то что снаружи может быть определено внутри
// то что внутри не может быть определенно снаружи

// то что объявлено ранее до блока снаружи не может быть повторно объявлено внутри, но можно вызвать
